# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2017-03-18 20:16
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import symposion.proposals.models
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalSpeaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'Accepted'), (3, 'Declined')], default=1, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Addtional speaker',
                'verbose_name_plural': 'Additional speakers',
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('timezone', timezone_field.fields.TimeZoneField(blank=True, verbose_name='timezone')),
            ],
            options={
                'verbose_name': 'conference',
                'verbose_name_plural': 'conferences',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('applied', 'applied'), ('invited', 'invited'), ('declined', 'declined'), ('rejected', 'rejected'), ('member', 'member'), ('manager', 'manager')], max_length=20, verbose_name='State')),
                ('message', models.TextField(blank=True, verbose_name='Message')),
            ],
            options={
                'verbose_name': 'Membership',
                'verbose_name_plural': 'Memberships',
            },
        ),
        migrations.CreateModel(
            name='ProposalBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', models.TextField(help_text='If your proposal is accepted this will be made public and printed in the program. Should be one paragraph, maximum 400 characters.', max_length=400, verbose_name='Brief Description')),
                ('abstract', models.TextField(help_text="Detailed outline. Will be made public if your proposal is accepted. Edit using <a href='http://daringfireball.net/projects/markdown/basics' target='_blank'>Markdown</a>.", verbose_name='Detailed Abstract')),
                ('abstract_html', models.TextField(blank=True)),
                ('additional_notes', models.TextField(blank=True, help_text="Anything else you'd like the program committee to know when making their selection: your past experience, etc. This is not made public. Edit using <a href='http://daringfireball.net/projects/markdown/basics' target='_blank'>Markdown</a>.", verbose_name='Addtional Notes')),
                ('additional_notes_html', models.TextField(blank=True)),
                ('submitted', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Submitted')),
                ('cancelled', models.BooleanField(default=False, verbose_name='Cancelled')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('slug', models.SlugField(verbose_name='Slug')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='Start')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='End')),
                ('closed', models.NullBooleanField(verbose_name='Closed')),
                ('published', models.NullBooleanField(verbose_name='Published')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symposion.Conference', verbose_name='Conference')),
            ],
            options={
                'verbose_name': 'section',
                'verbose_name_plural': 'sections',
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='As you would like it to appear in the conference program.', max_length=100, verbose_name='Name')),
                ('biography', models.TextField(blank=True, help_text="A little bit about you.  Edit using <a href='http://warpedvisions.org/projects/markdown-cheat-sheet/target='_blank'>Markdown</a>.", verbose_name='Biography')),
                ('biography_html', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, upload_to='speaker_photos', verbose_name='Photo')),
                ('twitter_username', models.CharField(blank=True, help_text='Your Twitter account', max_length=15)),
                ('annotation', models.TextField(verbose_name='Annotation')),
                ('invite_email', models.CharField(db_index=True, max_length=200, null=True, unique=True, verbose_name='Invite_email')),
                ('invite_token', models.CharField(db_index=True, max_length=40, verbose_name='Invite token')),
                ('created', models.DateTimeField(default=datetime.datetime.now, editable=False, verbose_name='Created')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='speaker_profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Speaker',
                'verbose_name_plural': 'Speakers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupportingDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('file', models.FileField(upload_to=symposion.proposals.models.uuid_filename, verbose_name='File')),
                ('description', models.CharField(max_length=140, verbose_name='Description')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supporting_documents', to='symposion.ProposalBase', verbose_name='Proposal')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Uploaded by')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('access', models.CharField(choices=[('open', 'open'), ('application', 'by application'), ('invitation', 'by invitation')], max_length=20, verbose_name='Access')),
                ('created', models.DateTimeField(default=datetime.datetime.now, editable=False, verbose_name='Created')),
                ('manager_permissions', models.ManyToManyField(blank=True, related_name='manager_teams', to='auth.Permission', verbose_name='Manager permissions')),
                ('permissions', models.ManyToManyField(blank=True, related_name='member_teams', to='auth.Permission', verbose_name='Permissions')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
            },
        ),
        migrations.AddField(
            model_name='proposalsection',
            name='section',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='symposion.Section', verbose_name='Section'),
        ),
        migrations.AddField(
            model_name='proposalkind',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposal_kinds', to='symposion.Section', verbose_name='Section'),
        ),
        migrations.AddField(
            model_name='proposalbase',
            name='additional_speakers',
            field=models.ManyToManyField(blank=True, through='symposion.AdditionalSpeaker', to='symposion.Speaker', verbose_name='Addtional speakers'),
        ),
        migrations.AddField(
            model_name='proposalbase',
            name='kind',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symposion.ProposalKind', verbose_name='Kind'),
        ),
        migrations.AddField(
            model_name='proposalbase',
            name='speaker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to='symposion.Speaker', verbose_name='Speaker'),
        ),
        migrations.AddField(
            model_name='membership',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='symposion.Team', verbose_name='Team'),
        ),
        migrations.AddField(
            model_name='membership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='additionalspeaker',
            name='proposalbase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symposion.ProposalBase', verbose_name='Proposalbase'),
        ),
        migrations.AddField(
            model_name='additionalspeaker',
            name='speaker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='symposion.Speaker', verbose_name='Speaker'),
        ),
        migrations.AlterUniqueTogether(
            name='additionalspeaker',
            unique_together=set([('speaker', 'proposalbase')]),
        ),
    ]
